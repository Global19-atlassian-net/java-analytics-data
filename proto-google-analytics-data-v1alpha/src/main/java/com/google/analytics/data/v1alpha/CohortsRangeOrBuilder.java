/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/analytics/data/v1alpha/data.proto

package com.google.analytics.data.v1alpha;

public interface CohortsRangeOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.analytics.data.v1alpha.CohortsRange)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Reporting date range for each cohort is calculated based on these three
   * fields.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.CohortsRange.Granularity granularity = 1;</code>
   *
   * @return The enum numeric value on the wire for granularity.
   */
  int getGranularityValue();
  /**
   *
   *
   * <pre>
   * Reporting date range for each cohort is calculated based on these three
   * fields.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.CohortsRange.Granularity granularity = 1;</code>
   *
   * @return The granularity.
   */
  com.google.analytics.data.v1alpha.CohortsRange.Granularity getGranularity();

  /**
   *
   *
   * <pre>
   * For daily cohorts, this will be the start day offset.
   * For weekly cohorts, this will be the week offset.
   * </pre>
   *
   * <code>int32 start_offset = 2;</code>
   *
   * @return The startOffset.
   */
  int getStartOffset();

  /**
   *
   *
   * <pre>
   * For daily cohorts, this will be the end day offset.
   * For weekly cohorts, this will be the week offset.
   * </pre>
   *
   * <code>int32 end_offset = 3;</code>
   *
   * @return The endOffset.
   */
  int getEndOffset();
}
